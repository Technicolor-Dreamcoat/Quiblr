import { useContext } from "react";
import { LemmyAPIContext } from "../contexts/LemmyAPIContext";

const useLemmyApi = () => {
  const context = useContext(LemmyAPIContext);
  if (!context) {
    throw new Error("Not in the APIProvider");
  }

  const {
    blockCommunity,
    changeInstance,
    client,
    createComment,
    createPost,
    deleteComment,
    deleteImage,
    deletePost,
    editComment,
    editPost,
    followCommunity,
    getComment,
    getComments,
    getCommunity,
    getFederatedInstances,
    getOtherUserDetails,
    getPersonDetails,
    getPersonMentions,
    getPost,
    getPosts,
    getReplies,
    getSingleCommentThread,
    getSite,
    importSettings,
    instanceDetail,
    jwt,
    language,
    likeComment,
    likePost,
    listCommunities,
    localUser,
    login,
    logout,
    markAllAsRead,
    markCommentReplyAsRead,
    passwordReset,
    register,
    saveComment,
    savePost,
    saveUserSettings,
    search,
    setSignedInUserInfo,
    signedInUserInfo,
    uploadImage,
  } = context;

  // return the functions from the context
  return {
    blockCommunity,
    changeInstance,
    client,
    createComment,
    createPost,
    deleteComment,
    deleteImage,
    deletePost,
    editComment,
    editPost,
    followCommunity,
    getComment,
    getComments,
    getCommunity,
    getFederatedInstances,
    getOtherUserDetails,
    getPersonDetails,
    getPersonMentions,
    getPost,
    getPosts,
    getReplies,
    getSingleCommentThread,
    getSite,
    importSettings,
    instanceDetail,
    jwt,
    language,
    likeComment,
    likePost,
    listCommunities,
    localUser,
    login,
    logout,
    markAllAsRead,
    markCommentReplyAsRead,
    passwordReset,
    register,
    saveComment,
    savePost,
    saveUserSettings,
    search,
    setSignedInUserInfo,
    signedInUserInfo,
    uploadImage,
  };
};

export default useLemmyApi;
